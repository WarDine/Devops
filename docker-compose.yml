version: "3.8"

services:
    ui:
        image: ui #TODO 
        ports:
            - 80:80
        deploy:
            replicas: 10
            placement:
                max_replicas_per_node: 2
            update_config:
                parallelism: 2
                order: start-first
            rollback_config:
                parallelism: 2
                order: start-first
        depends_on:
            - recipe-manager-service
            - mass-halls-manager-service
        networks:
            - ui-recipe-manager
            - ui-mass-halls
  
    recipe-manager-service:
        image: recipe-manager-service #TODO 
        deploy:
            replicas: 2
            placement:
                max_replicas_per_node: 1
            update_config:
                order: start-first
            rollback_config:
                order: start-first
        depends_on:
            - db
        networks:
            - ui-recipe-manager
            - recipe-manager-db

    mass-halls-manager-service:
        image: mass-halls-manager-service #TODO 
        deploy:
            replicas: 6
            placement:
                max_replicas_per_node: 2
            update_config:
                order: start-first
            rollback_config:
                order: start-first
        depends_on:
            - db
        networks:
            - ui-mass-halls
            - mass-halls-manager-db

    db:
        image: postgres:12
        environment:
            POSTGRES_DB: recipe #TODO
            POSTGRES_USER: admin #TODO
            POSTGRES_PASSWORD: admin #TODO
        deploy:
            placement:
                constraints:
                    - "node.role==manager"
        volumes:
            - ./database/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql #TODO
            - db-volume:/var/lib/postgresql/data
        networks:
            - recipe-manager-db
            - mass-halls-manager-db

    kong:
        image: kong:latest
        volumes:
            - ./kong:/usr/local/kong/declarative
        environment:
            KONG_DATABASE: 'off'
            KONG_DECLARATIVE_CONFIG: /usr/local/kong/declarative/kong-plugins.yml
            KONG_PROXY_ACCESS_LOG: /dev/stdout
            KONG_ADMIN_ACCESS_LOG: /dev/stdout
            KONG_PROXY_ERROR_LOG: /dev/stderr
            KONG_ADMIN_ERROR_LOG: /dev/stderr
            KONG_ADMIN_LISTEN: 0.0.0.0:8001, 0.0.0.0:8444 ssl #CHECK in case of error
        ports:
            - 80:8000
            - 443:8443
            - 8001:8001
            - 8444:8444
            #TODO logging purposes
        deploy:
            placement:
                constraints: [node.role == manager]
        networks:
            - kong-ui
            - logging

    grafana:
        image: grafana/grafana:latest
        volumes:
            - ./grafana/data:/var/lib/grafana
        ports:
            - 3000:3000
        networks:
            - logging
    
    prometheus:
        image: prom/prometheus
        volumes:
            - ./prometheus/config.yml:/etc/prometheus/prometheus.yml
        ports:
            - 9090:9090
        networks:
            - logging


volumes:
    db-volume:

networks:
    ui-recipe-manager:
    ui-mass-halls:
    recipe-manager-db:
    mass-halls-manager-db:
    kong-ui:
    logging:
